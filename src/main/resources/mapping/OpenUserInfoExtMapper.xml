<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.open.custom.api.user.mapper.OpenUserInfoExtMapper" >
  <resultMap id="BaseResultMap" type="com.open.custom.api.user.model.OpenUserInfoExt" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USER_CODE" property="userCode" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="STATE" property="state" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.open.custom.api.user.model.OpenUserInfoExtWithBLOBs" extends="BaseResultMap" >
    <result column="USER_SET" property="userSet" jdbcType="LONGVARCHAR" />
    <result column="USER_SET_1" property="userSet1" jdbcType="LONGVARCHAR" />
    <result column="USER_SET_2" property="userSet2" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, USER_CODE, CREATE_DATE, UPDATE_DATE, STATE, REMARK
  </sql>
  <sql id="Blob_Column_List" >
    USER_SET, USER_SET_1, USER_SET_2
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.open.custom.api.user.model.OpenUserInfoExtExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from OPEN_USER_INFO_EXT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.open.custom.api.user.model.OpenUserInfoExtExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from OPEN_USER_INFO_EXT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from OPEN_USER_INFO_EXT
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from OPEN_USER_INFO_EXT
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.open.custom.api.user.model.OpenUserInfoExtExample" >
    delete from OPEN_USER_INFO_EXT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.open.custom.api.user.model.OpenUserInfoExtWithBLOBs" >
    insert into OPEN_USER_INFO_EXT (ID, USER_ID, USER_CODE, 
      CREATE_DATE, UPDATE_DATE, STATE, 
      REMARK, USER_SET, USER_SET_1, 
      USER_SET_2)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{userSet,jdbcType=LONGVARCHAR}, #{userSet1,jdbcType=LONGVARCHAR}, 
      #{userSet2,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.open.custom.api.user.model.OpenUserInfoExtWithBLOBs" >
    insert into OPEN_USER_INFO_EXT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="userCode != null" >
        USER_CODE,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="userSet != null" >
        USER_SET,
      </if>
      <if test="userSet1 != null" >
        USER_SET_1,
      </if>
      <if test="userSet2 != null" >
        USER_SET_2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userSet != null" >
        #{userSet,jdbcType=LONGVARCHAR},
      </if>
      <if test="userSet1 != null" >
        #{userSet1,jdbcType=LONGVARCHAR},
      </if>
      <if test="userSet2 != null" >
        #{userSet2,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.open.custom.api.user.model.OpenUserInfoExtExample" resultType="java.lang.Integer" >
    select count(*) from OPEN_USER_INFO_EXT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update OPEN_USER_INFO_EXT
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userCode != null" >
        USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.userSet != null" >
        USER_SET = #{record.userSet,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.userSet1 != null" >
        USER_SET_1 = #{record.userSet1,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.userSet2 != null" >
        USER_SET_2 = #{record.userSet2,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update OPEN_USER_INFO_EXT
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      STATE = #{record.state,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      USER_SET = #{record.userSet,jdbcType=LONGVARCHAR},
      USER_SET_1 = #{record.userSet1,jdbcType=LONGVARCHAR},
      USER_SET_2 = #{record.userSet2,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update OPEN_USER_INFO_EXT
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      STATE = #{record.state,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.open.custom.api.user.model.OpenUserInfoExtWithBLOBs" >
    update OPEN_USER_INFO_EXT
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        USER_CODE = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userSet != null" >
        USER_SET = #{userSet,jdbcType=LONGVARCHAR},
      </if>
      <if test="userSet1 != null" >
        USER_SET_1 = #{userSet1,jdbcType=LONGVARCHAR},
      </if>
      <if test="userSet2 != null" >
        USER_SET_2 = #{userSet2,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.open.custom.api.user.model.OpenUserInfoExtWithBLOBs" >
    update OPEN_USER_INFO_EXT
    set USER_ID = #{userId,jdbcType=INTEGER},
      USER_CODE = #{userCode,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR},
      USER_SET = #{userSet,jdbcType=LONGVARCHAR},
      USER_SET_1 = #{userSet1,jdbcType=LONGVARCHAR},
      USER_SET_2 = #{userSet2,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.open.custom.api.user.model.OpenUserInfoExt" >
    update OPEN_USER_INFO_EXT
    set USER_ID = #{userId,jdbcType=INTEGER},
      USER_CODE = #{userCode,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>