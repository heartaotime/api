<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.open.custom.api.user.mapper.OpenUserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.open.custom.api.user.model.OpenUserInfo" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_CODE" property="userCode" jdbcType="VARCHAR" />
    <result column="APP_CODE" property="appCode" jdbcType="VARCHAR" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="PASS_WORD" property="passWord" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="NICK_NAME" property="nickName" jdbcType="VARCHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="DATE" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="STATE" property="state" jdbcType="INTEGER" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_CODE, APP_CODE, USER_NAME, PASS_WORD, EMAIL, NICK_NAME, BIRTHDAY, CREATE_DATE, 
    UPDATE_DATE, STATE, REMARK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.open.custom.api.user.model.OpenUserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from OPEN_USER_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from OPEN_USER_INFO
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from OPEN_USER_INFO
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.open.custom.api.user.model.OpenUserInfoExample" >
    delete from OPEN_USER_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.open.custom.api.user.model.OpenUserInfo" >
    insert into OPEN_USER_INFO (ID, USER_CODE, APP_CODE, 
      USER_NAME, PASS_WORD, EMAIL, 
      NICK_NAME, BIRTHDAY, CREATE_DATE, 
      UPDATE_DATE, STATE, REMARK
      )
    values (#{id,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{appCode,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.open.custom.api.user.model.OpenUserInfo" >
    insert into OPEN_USER_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userCode != null" >
        USER_CODE,
      </if>
      <if test="appCode != null" >
        APP_CODE,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="passWord != null" >
        PASS_WORD,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="nickName != null" >
        NICK_NAME,
      </if>
      <if test="birthday != null" >
        BIRTHDAY,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="appCode != null" >
        #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.open.custom.api.user.model.OpenUserInfoExample" resultType="java.lang.Integer" >
    select count(*) from OPEN_USER_INFO
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update OPEN_USER_INFO
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userCode != null" >
        USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.appCode != null" >
        APP_CODE = #{record.appCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.passWord != null" >
        PASS_WORD = #{record.passWord,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        BIRTHDAY = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update OPEN_USER_INFO
    set ID = #{record.id,jdbcType=INTEGER},
      USER_CODE = #{record.userCode,jdbcType=VARCHAR},
      APP_CODE = #{record.appCode,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PASS_WORD = #{record.passWord,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      NICK_NAME = #{record.nickName,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=DATE},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      STATE = #{record.state,jdbcType=INTEGER},
      REMARK = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.open.custom.api.user.model.OpenUserInfo" >
    update OPEN_USER_INFO
    <set >
      <if test="userCode != null" >
        USER_CODE = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="appCode != null" >
        APP_CODE = #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        PASS_WORD = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        NICK_NAME = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        BIRTHDAY = #{birthday,jdbcType=DATE},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.open.custom.api.user.model.OpenUserInfo" >
    update OPEN_USER_INFO
    set USER_CODE = #{userCode,jdbcType=VARCHAR},
      APP_CODE = #{appCode,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      PASS_WORD = #{passWord,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      NICK_NAME = #{nickName,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=DATE},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=INTEGER},
      REMARK = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>